{"ast":null,"code":"// localStorage utility functions for Study Planner\n\n// Default data structure\nconst defaultData = {\n  tasks: [{\n    id: '1',\n    title: 'Complete React Assignment',\n    description: 'Build a todo app with React hooks',\n    deadline: '2025-01-27',\n    priority: 'high',\n    category: 'Programming',\n    status: 'in-progress',\n    createdAt: new Date().toISOString()\n  }, {\n    id: '2',\n    title: 'Study JavaScript Closures',\n    description: 'Review closures and lexical scoping',\n    deadline: '2025-01-28',\n    priority: 'medium',\n    category: 'Programming',\n    status: 'pending',\n    createdAt: new Date().toISOString()\n  }, {\n    id: '3',\n    title: 'Read Chapter 5 - Data Structures',\n    description: 'Complete algorithms textbook chapter',\n    deadline: '2025-01-26',\n    priority: 'high',\n    category: 'Computer Science',\n    status: 'completed',\n    createdAt: new Date().toISOString()\n  }],\n  habits: [{\n    id: '1',\n    name: 'Read Programming Books',\n    streak: 15,\n    completedToday: true,\n    totalCompletions: 45,\n    lastCompleted: new Date().toISOString().split('T')[0],\n    createdAt: new Date().toISOString()\n  }, {\n    id: '2',\n    name: 'Code Review Practice',\n    streak: 8,\n    completedToday: false,\n    totalCompletions: 32,\n    lastCompleted: '2025-01-25',\n    createdAt: new Date().toISOString()\n  }],\n  timerSettings: {\n    focusTime: 25,\n    shortBreak: 5,\n    longBreak: 15,\n    sessionsUntilLongBreak: 4\n  },\n  timerStats: {\n    sessionsToday: 0,\n    focusTimeToday: 0,\n    totalSessions: 0,\n    totalFocusTime: 0\n  },\n  settings: {\n    darkMode: true,\n    notifications: true\n  }\n};\n\n// Initialize data if not exists\nexport const initializeData = () => {\n  if (!localStorage.getItem('studyPlannerData')) {\n    localStorage.setItem('studyPlannerData', JSON.stringify(defaultData));\n  }\n};\n\n// Get all data\nexport const getData = () => {\n  initializeData();\n  return JSON.parse(localStorage.getItem('studyPlannerData'));\n};\n\n// Save all data\nexport const saveData = data => {\n  localStorage.setItem('studyPlannerData', JSON.stringify(data));\n};\n\n// Tasks functions\nexport const getTasks = () => {\n  const data = getData();\n  return data.tasks || [];\n};\nexport const addTask = task => {\n  const data = getData();\n  const newTask = {\n    ...task,\n    id: Date.now().toString(),\n    createdAt: new Date().toISOString()\n  };\n  data.tasks.push(newTask);\n  saveData(data);\n  return newTask;\n};\nexport const updateTask = (taskId, updates) => {\n  const data = getData();\n  const taskIndex = data.tasks.findIndex(task => task.id === taskId);\n  if (taskIndex !== -1) {\n    data.tasks[taskIndex] = {\n      ...data.tasks[taskIndex],\n      ...updates\n    };\n    saveData(data);\n    return data.tasks[taskIndex];\n  }\n  return null;\n};\nexport const deleteTask = taskId => {\n  const data = getData();\n  data.tasks = data.tasks.filter(task => task.id !== taskId);\n  saveData(data);\n};\n\n// Habits functions\nexport const getHabits = () => {\n  const data = getData();\n  return data.habits || [];\n};\nexport const addHabit = habit => {\n  const data = getData();\n  const newHabit = {\n    ...habit,\n    id: Date.now().toString(),\n    streak: 0,\n    completedToday: false,\n    totalCompletions: 0,\n    lastCompleted: null,\n    createdAt: new Date().toISOString()\n  };\n  data.habits.push(newHabit);\n  saveData(data);\n  return newHabit;\n};\nexport const toggleHabit = habitId => {\n  const data = getData();\n  const habitIndex = data.habits.findIndex(habit => habit.id === habitId);\n  if (habitIndex !== -1) {\n    const habit = data.habits[habitIndex];\n    const today = new Date().toISOString().split('T')[0];\n    if (habit.completedToday) {\n      // Uncomplete habit\n      habit.completedToday = false;\n      habit.totalCompletions = Math.max(0, habit.totalCompletions - 1);\n      if (habit.streak > 0) habit.streak--;\n    } else {\n      // Complete habit\n      habit.completedToday = true;\n      habit.totalCompletions++;\n      habit.lastCompleted = today;\n\n      // Calculate streak\n      const yesterday = new Date();\n      yesterday.setDate(yesterday.getDate() - 1);\n      const yesterdayStr = yesterday.toISOString().split('T')[0];\n      if (habit.lastCompleted === yesterdayStr || habit.streak === 0) {\n        habit.streak++;\n      } else {\n        habit.streak = 1;\n      }\n    }\n    saveData(data);\n    return habit;\n  }\n  return null;\n};\nexport const deleteHabit = habitId => {\n  const data = getData();\n  data.habits = data.habits.filter(habit => habit.id !== habitId);\n  saveData(data);\n};\n\n// Timer functions\nexport const getTimerSettings = () => {\n  const data = getData();\n  return data.timerSettings || defaultData.timerSettings;\n};\nexport const updateTimerSettings = settings => {\n  const data = getData();\n  data.timerSettings = {\n    ...data.timerSettings,\n    ...settings\n  };\n  saveData(data);\n};\nexport const getTimerStats = () => {\n  const data = getData();\n  return data.timerStats || defaultData.timerStats;\n};\nexport const updateTimerStats = stats => {\n  const data = getData();\n  data.timerStats = {\n    ...data.timerStats,\n    ...stats\n  };\n  saveData(data);\n};\n\n// Settings functions\nexport const getSettings = () => {\n  const data = getData();\n  return data.settings || defaultData.settings;\n};\nexport const updateSettings = settings => {\n  const data = getData();\n  data.settings = {\n    ...data.settings,\n    ...settings\n  };\n  saveData(data);\n};\n\n// Export/Import functions\nexport const exportData = () => {\n  const data = getData();\n  const exportData = {\n    ...data,\n    exportDate: new Date().toISOString(),\n    version: '1.0'\n  };\n  const blob = new Blob([JSON.stringify(exportData, null, 2)], {\n    type: 'application/json'\n  });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `study-planner-backup-${new Date().toISOString().split('T')[0]}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\nexport const importData = file => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = e => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate data structure\n        if (importedData.tasks && importedData.habits) {\n          saveData(importedData);\n          resolve(true);\n        } else {\n          reject(new Error('Invalid data format'));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n    reader.readAsText(file);\n  });\n};\nexport const clearAllData = () => {\n  localStorage.removeItem('studyPlannerData');\n  initializeData();\n};\n\n// Generate unique ID\nexport const generateId = () => {\n  return Date.now().toString() + Math.random().toString(36).substr(2, 9);\n};","map":{"version":3,"names":["defaultData","tasks","id","title","description","deadline","priority","category","status","createdAt","Date","toISOString","habits","name","streak","completedToday","totalCompletions","lastCompleted","split","timerSettings","focusTime","shortBreak","longBreak","sessionsUntilLongBreak","timerStats","sessionsToday","focusTimeToday","totalSessions","totalFocusTime","settings","darkMode","notifications","initializeData","localStorage","getItem","setItem","JSON","stringify","getData","parse","saveData","data","getTasks","addTask","task","newTask","now","toString","push","updateTask","taskId","updates","taskIndex","findIndex","deleteTask","filter","getHabits","addHabit","habit","newHabit","toggleHabit","habitId","habitIndex","today","Math","max","yesterday","setDate","getDate","yesterdayStr","deleteHabit","getTimerSettings","updateTimerSettings","getTimerStats","updateTimerStats","stats","getSettings","updateSettings","exportData","exportDate","version","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","importData","file","Promise","resolve","reject","reader","FileReader","onload","e","importedData","target","result","Error","error","readAsText","clearAllData","removeItem","generateId","random","substr"],"sources":["/home/ronak/new-app/frontend/src/utils/localStorage.js"],"sourcesContent":["// localStorage utility functions for Study Planner\n\n// Default data structure\nconst defaultData = {\n  tasks: [\n    {\n      id: '1',\n      title: 'Complete React Assignment',\n      description: 'Build a todo app with React hooks',\n      deadline: '2025-01-27',\n      priority: 'high',\n      category: 'Programming',\n      status: 'in-progress',\n      createdAt: new Date().toISOString()\n    },\n    {\n      id: '2',\n      title: 'Study JavaScript Closures',\n      description: 'Review closures and lexical scoping',\n      deadline: '2025-01-28',\n      priority: 'medium',\n      category: 'Programming',\n      status: 'pending',\n      createdAt: new Date().toISOString()\n    },\n    {\n      id: '3',\n      title: 'Read Chapter 5 - Data Structures',\n      description: 'Complete algorithms textbook chapter',\n      deadline: '2025-01-26',\n      priority: 'high',\n      category: 'Computer Science',\n      status: 'completed',\n      createdAt: new Date().toISOString()\n    }\n  ],\n  habits: [\n    {\n      id: '1',\n      name: 'Read Programming Books',\n      streak: 15,\n      completedToday: true,\n      totalCompletions: 45,\n      lastCompleted: new Date().toISOString().split('T')[0],\n      createdAt: new Date().toISOString()\n    },\n    {\n      id: '2',\n      name: 'Code Review Practice',\n      streak: 8,\n      completedToday: false,\n      totalCompletions: 32,\n      lastCompleted: '2025-01-25',\n      createdAt: new Date().toISOString()\n    }\n  ],\n  timerSettings: {\n    focusTime: 25,\n    shortBreak: 5,\n    longBreak: 15,\n    sessionsUntilLongBreak: 4\n  },\n  timerStats: {\n    sessionsToday: 0,\n    focusTimeToday: 0,\n    totalSessions: 0,\n    totalFocusTime: 0\n  },\n  settings: {\n    darkMode: true,\n    notifications: true\n  }\n};\n\n// Initialize data if not exists\nexport const initializeData = () => {\n  if (!localStorage.getItem('studyPlannerData')) {\n    localStorage.setItem('studyPlannerData', JSON.stringify(defaultData));\n  }\n};\n\n// Get all data\nexport const getData = () => {\n  initializeData();\n  return JSON.parse(localStorage.getItem('studyPlannerData'));\n};\n\n// Save all data\nexport const saveData = (data) => {\n  localStorage.setItem('studyPlannerData', JSON.stringify(data));\n};\n\n// Tasks functions\nexport const getTasks = () => {\n  const data = getData();\n  return data.tasks || [];\n};\n\nexport const addTask = (task) => {\n  const data = getData();\n  const newTask = {\n    ...task,\n    id: Date.now().toString(),\n    createdAt: new Date().toISOString()\n  };\n  data.tasks.push(newTask);\n  saveData(data);\n  return newTask;\n};\n\nexport const updateTask = (taskId, updates) => {\n  const data = getData();\n  const taskIndex = data.tasks.findIndex(task => task.id === taskId);\n  if (taskIndex !== -1) {\n    data.tasks[taskIndex] = { ...data.tasks[taskIndex], ...updates };\n    saveData(data);\n    return data.tasks[taskIndex];\n  }\n  return null;\n};\n\nexport const deleteTask = (taskId) => {\n  const data = getData();\n  data.tasks = data.tasks.filter(task => task.id !== taskId);\n  saveData(data);\n};\n\n// Habits functions\nexport const getHabits = () => {\n  const data = getData();\n  return data.habits || [];\n};\n\nexport const addHabit = (habit) => {\n  const data = getData();\n  const newHabit = {\n    ...habit,\n    id: Date.now().toString(),\n    streak: 0,\n    completedToday: false,\n    totalCompletions: 0,\n    lastCompleted: null,\n    createdAt: new Date().toISOString()\n  };\n  data.habits.push(newHabit);\n  saveData(data);\n  return newHabit;\n};\n\nexport const toggleHabit = (habitId) => {\n  const data = getData();\n  const habitIndex = data.habits.findIndex(habit => habit.id === habitId);\n  if (habitIndex !== -1) {\n    const habit = data.habits[habitIndex];\n    const today = new Date().toISOString().split('T')[0];\n    \n    if (habit.completedToday) {\n      // Uncomplete habit\n      habit.completedToday = false;\n      habit.totalCompletions = Math.max(0, habit.totalCompletions - 1);\n      if (habit.streak > 0) habit.streak--;\n    } else {\n      // Complete habit\n      habit.completedToday = true;\n      habit.totalCompletions++;\n      habit.lastCompleted = today;\n      \n      // Calculate streak\n      const yesterday = new Date();\n      yesterday.setDate(yesterday.getDate() - 1);\n      const yesterdayStr = yesterday.toISOString().split('T')[0];\n      \n      if (habit.lastCompleted === yesterdayStr || habit.streak === 0) {\n        habit.streak++;\n      } else {\n        habit.streak = 1;\n      }\n    }\n    \n    saveData(data);\n    return habit;\n  }\n  return null;\n};\n\nexport const deleteHabit = (habitId) => {\n  const data = getData();\n  data.habits = data.habits.filter(habit => habit.id !== habitId);\n  saveData(data);\n};\n\n// Timer functions\nexport const getTimerSettings = () => {\n  const data = getData();\n  return data.timerSettings || defaultData.timerSettings;\n};\n\nexport const updateTimerSettings = (settings) => {\n  const data = getData();\n  data.timerSettings = { ...data.timerSettings, ...settings };\n  saveData(data);\n};\n\nexport const getTimerStats = () => {\n  const data = getData();\n  return data.timerStats || defaultData.timerStats;\n};\n\nexport const updateTimerStats = (stats) => {\n  const data = getData();\n  data.timerStats = { ...data.timerStats, ...stats };\n  saveData(data);\n};\n\n// Settings functions\nexport const getSettings = () => {\n  const data = getData();\n  return data.settings || defaultData.settings;\n};\n\nexport const updateSettings = (settings) => {\n  const data = getData();\n  data.settings = { ...data.settings, ...settings };\n  saveData(data);\n};\n\n// Export/Import functions\nexport const exportData = () => {\n  const data = getData();\n  const exportData = {\n    ...data,\n    exportDate: new Date().toISOString(),\n    version: '1.0'\n  };\n  \n  const blob = new Blob([JSON.stringify(exportData, null, 2)], { type: 'application/json' });\n  const url = URL.createObjectURL(blob);\n  const a = document.createElement('a');\n  a.href = url;\n  a.download = `study-planner-backup-${new Date().toISOString().split('T')[0]}.json`;\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(url);\n};\n\nexport const importData = (file) => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      try {\n        const importedData = JSON.parse(e.target.result);\n        // Validate data structure\n        if (importedData.tasks && importedData.habits) {\n          saveData(importedData);\n          resolve(true);\n        } else {\n          reject(new Error('Invalid data format'));\n        }\n      } catch (error) {\n        reject(error);\n      }\n    };\n    reader.readAsText(file);\n  });\n};\n\nexport const clearAllData = () => {\n  localStorage.removeItem('studyPlannerData');\n  initializeData();\n};\n\n// Generate unique ID\nexport const generateId = () => {\n  return Date.now().toString() + Math.random().toString(36).substr(2, 9);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}